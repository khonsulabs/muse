basic_string: {
    src: r#""hello, world""#,
    output: String("hello, world"),
}

ascii_escape: {
    src: r#""\x4E\x6e""#,
    output: String("Nn"),
}

unicode_escape: {
    src: r#""\u{1F980}""#,
    output: String("ðŸ¦€"),
}

split: {
    src: r#""a, b, c".split(", ")"#,
    output: List([
        String("a"),
        String("b"),
        String("c"),
    ]),
}


split_same: {
    src: r#"
        let a = "a";
        a.split(a)
    "#,
    output: List([
        String(""),
    ]),
}

format: {
    src: r#"
        let name = "world";
        f"hello, ${ name }!"
    "#,
    output: String("hello, world!"),
}

format_escape: {
    src: r#"
        f"hello, \${ name }! $"
    "#,
    output: String("hello, ${ name }! $"),
}

raw_string: {
    src: r#"r"raw\string""#,
    output: String(r#"raw\string"#),
}

raw_1_string: {
    src: r##"r#"""#"##,
    output: String(r#"""#),
}

raw_2_string: {
    src: r###"r##""#"##"###,
    output: String(r##""#"##),
}

raw_format: {
    src: r##"
        let name = "world";
        fr#"hello, "${ name }"!"#
    "##,
    output: String(r#"hello, "world"!"#),
}

raw_format_escape: {
    src: r#"
        fr"hello, $${ name }!"
    "#,
    output: String("hello, ${ name }!"),
}

to_string: {
    src: r#"
        $.core.String(123)
    "#,
    output: String("123"),
}
