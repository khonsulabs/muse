basic_regex: {
    src: r#"\hello/"#,
    output: Regex {
        pattern: "hello",
    },
}

regex_options: {
    src: r#"\hello/uims"#,
    output: Regex {
        pattern: "hello",
        unicode: true,
        dot_matches_all: true,
        multiline: true,
        ignore_case: true,
    },
}

regex_no_eol: {
    src: "\\\n/",
    output: Error([Ranged(Syntax(Token(UnexpectedChar('\n'))), SourceRange { source_id: SourceId(None), start: 1, length: 1 })]),
}

expanded_regex: {
    src: "w\\hello # world\n/",
    output: Regex {
        pattern: "hello # world\n",
        expanded: true,
    },
}

regex_captures: {
    src: r#"\(a)|(b)/.total_captures()"#,
    output: UInt(3),
}

regex_static_captures: {
    src: r#"\(a)|(b)/.total_static_captures()"#,
    output: UInt(2),
}

regex_named_capture: {
    src: r#"
        let \(?<first>\w+) (?<second>\w+)/ = "Muse Language";
        "Hello, " + first
    "#,
    output: String("Hello, Muse"),
}
